4
(define count (lambda (item L) (if L (+ (equal? item (first L)) (count item (rest L))) 0)))
CAR:
    CAR:
        item    
    CDR:
        CAR:
            L        
        CDR:
            '()
CDR:
    CAR:
        CAR:
            if        
        CDR:
            CAR:
                L            
            CDR:
                CAR:
                    CAR:
                        +                    
                    CDR:
                        CAR:
                            CAR:
                                equal?                            
                            CDR:
                                CAR:
                                    item                                
                                CDR:
                                    CAR:
                                        CAR:
                                            first                                        
                                        CDR:
                                            CAR:
                                                L                                            
                                            CDR:
                                                '()                                    
                                    CDR:
                                        '()                        
                        CDR:
                            CAR:
                                CAR:
                                    count                                
                                CDR:
                                    CAR:
                                        item                                    
                                    CDR:
                                        CAR:
                                            CAR:
                                                rest                                            
                                            CDR:
                                                CAR:
                                                    L                                                
                                                CDR:
                                                    '()                                        
                                        CDR:
                                            '()                            
                            CDR:
                                '()                
                CDR:
                    CAR:
                        0                    
                    CDR:
                        '()    
    CDR:
        '()NULL

(define list-length (lambda (L) (if (null? L) 0 (+ 1 (list-length (rest L))))))

list-length:
    ldarg_x 0
    ldempty
    cmp_eq
    condbr true_branch
    br false_branch
true_branch:
    push_imm_fixnum_1 0
    ret
false_branch:
    ldarg_x 0
    ldcdr
    call list-length
    push_imm_fixnum_1 1
    add
    ret

(define list-length-tailrec (lambda (L x) (if (null? L) x (list-length-tailrec (rest L) (+ 1 x)))))

list-length-tailrec:
    ldarg_x 0
    ldempty
    cmp_eq
    condbr true_branch
    br false_branch
true_branch
    ldarg_x 1
    ret
false_branch
    ldarg_x 1
    push_imm_fixnum_1 1
    add
    ldarg_x 0
    ldcdr
    tailcall list-length-tailrec

(define fact (lambda (n) (if (<= n 1) 1 (* n (fact (- n 1))))))

fact:
    push_imm_fixnum_1 1
    ldarg_x 0
    cmpn_le
    condbr true_branch
    br false_branch
false_branch:
    push_imm_fixnum_1 1
    ldarg_x 0
    sub
    call fact
    ldarg_x 0
    mul
    ret
true_branch:
    push_imm_fixnum_1 1
    ret


(define fact-tailrec (lambda (acc i limit) (if (> i limit) acc (fact-tailrec (* i acc) (+ i 1) limit))))

fact-tailrec
    ldarg_x 2
    ldarg_x 1
    cmpn_ge
    condbr true_branch
    br false_branch
true_branch:
    ldarg_x 0
    ret
false_branch:
    ldarg_x 2
    push_imm_fixnum_1 1
    ldarg_x 1
    add
    ldarg_x 0
    ldarg_x 1
    mul
    tailcall fact-tailrec

CAR:
    CAR:
        n    
    CDR:
        '()
CDR:
    CAR:
        CAR:
            if        
        CDR:
            CAR:
                CAR:
                    <=                
                CDR:
                    CAR:
                        n                    
                    CDR:
                        CAR:
                            1                        
                        CDR:
                            '()            
            CDR:
                CAR:
                    1                
                CDR:
                    CAR:
                        CAR:
                            *                        
                        CDR:
                            CAR:
                                n                            
                            CDR:
                                CAR:
                                    CAR:
                                        fact                                    
                                    CDR:
                                        CAR:
                                            CAR:
                                                -                                            
                                            CDR:
                                                CAR:
                                                    n                                                
                                                CDR:
                                                    CAR:
                                                        1                                                    
                                                    CDR:
                                                        '()                                        
                                        CDR:
                                            '()                                
                                CDR:
                                    '()                    
                    CDR:
                        '()    
    CDR:
        '()NULL

(define hello-world (lambda () (display \"hello world!\") (newline)))
CAR:
    '()
CDR:
    CAR:
        CAR:
            display        
        CDR:
            CAR:
                "hello world!"            
            CDR:
                '()    
    CDR:
        CAR:
            CAR:
                newline            
            CDR:
                '()        
        CDR:
            '()NULL

(define hello-world-2 (lambda (x) `(foo ,bar ,@(list 1 2 3))))
CAR:
    CAR:
        x    
    CDR:
        '()
CDR:
    CAR:
        CAR:
            quasiquote        
        CDR:
            CAR:
                CAR:
                    foo                
                CDR:
                    CAR:
                        CAR:
                            unquote                        
                        CDR:
                            CAR:
                                bar                            
                            CDR:
                                '()                    
                    CDR:
                        CAR:
                            CAR:
                                unquote-splicing                            
                            CDR:
                                CAR:
                                    CAR:
                                        list                                    
                                    CDR:
                                        CAR:
                                            1                                        
                                        CDR:
                                            CAR:
                                                2                                            
                                            CDR:
                                                CAR:
                                                    3                                                
                                                CDR:
                                                    '()                                
                                CDR:
                                    '()                        
                        CDR:
                            '()            
            CDR:
                '()    
    CDR:
        '()NULL
