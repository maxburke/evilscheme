(begin

 (define a (lambda (i j)
            (/ 1.0 (+ (* (+ i j)
                         (/ (+ i (+ j 1)) 2.0)) 
                      (+ i 1)))))

 (define a-times-u-core (lambda (u au i j n)
                         (set! (vector-ref au i) (+ (vector-ref au j) (a i j)))
                         (if (< j n)
                          (a-times-u-core u au i (+ j 1) n))))

 (define a-times-u (lambda (u au i n)
                    (set! (vector-ref au i) 0)
                    (a-times-u-core u au i 0 n)
                    (if (< i n)
                     (a-times-u u au (+ i 1) n))))

 (define at-times-u-core (lambda (u au i j n)
                          (set! (vector-ref au i) (+ (vector-ref au j) (a j i)))
                          (if (< j n)
                           (a-times-u-core u au i (+ j 1) n))))

 (define at-times-u (lambda (u au i n)
                     (set! (vector-ref au i) 0)
                     (a-times-u-core u au i 0 n)
                     (if (< i n)
                      (at-times-u u au (+ i 1) n))))

 (define ata-times-u (lambda (u atau n)
                      (let ((v (make-vector (+ n 1))))
                       (a-times-u u v 0 n)
                       (at-times-u v atau 0 n))))


 (define dot (lambda (v u n)
              (let* ((f (lambda (v u n i sum)
                          (if (= n i)
                            sum
                            (let ((v0 (vector-ref v i))
                                  (u0 (vector-ref u i)))
                              (f v u n (+ i 1) (+ (* v0 v0) (* u0 u0))))))))
                (f v u n 0 0))))

 (define spectral-norm-test-core (lambda (u v n i limit)
                                  (if (< i limit)
                                   (begin
                                    (ata-times-u u v n)
                                    (ata-times-u v u n)
                                    (spectral-norm-test-core u v n (+ i 1) limit)))))

 (define spectral-norm-test (lambda (u v n i limit)
                             (begin
                              (spectral-norm-test-core u v n i limit)
                              (/ (dot u v n) (dot v v n)))))

 (define spectral-norm (lambda (n)
                        (let ((u (make-vector (+ n 1) 1.0))
                              (v (make-vector (+ n 1) 0.0)))
                         (spectral-norm-test u v (- n 1) 0 10))))

 (disassemble 'a)
 (disassemble 'a-times-u-core)
 (disassemble 'a-times-u)
 (disassemble 'at-times-u-core)
 (disassemble 'at-times-u)
 (disassemble 'ata-times-u)
 (disassemble 'dot)
 (disassemble 'spectral-norm-test)
 (disassemble 'spectral-norm)
 (spectral-norm 128))
>a:
        0: 07 00 00 80 3F                LDIMM_4_FLONUM 1.000000
        5: 01 00 00                      LDSLOT 0
        8: 01 01 00                      LDSLOT 1
       11: 21                            ADD
       12: 01 00 00                      LDSLOT 0
       15: 01 01 00                      LDSLOT 1
       18: 04 01                         LDIMM_1_FIXNUM 1
       20: 21                            ADD
       21: 21                            ADD
       22: 07 00 00 00 40                LDIMM_4_FLONUM 2.000000
       27: 24                            DIV
       28: 23                            MUL
       29: 01 00 00                      LDSLOT 0
       32: 04 01                         LDIMM_1_FIXNUM 1
       34: 21                            ADD
       35: 21                            ADD
       36: 24                            DIV
       37: 1F                            RETURN
a-times-u-core:
        0: 01 03 00                      LDSLOT 3
        3: 01 01 00                      LDSLOT 1
        6: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       15: 0E                            LOAD
       16: 1D 02 00                      CALL 2
       19: 01 03 00                      LDSLOT 3
       22: 01 02 00                      LDSLOT 2
       25: 20 BE B7 01 86 4C BD 63 AF    GET_BOUND_LOCATION a
       34: 0E                            LOAD
       35: 1D 02 00                      CALL 2
       38: 21                            ADD
       39: 01 02 00                      LDSLOT 2
       42: 01 01 00                      LDSLOT 1
       45: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       54: 0E                            LOAD
       55: 1D 02 00                      CALL 2
       58: 12                            SET
       59: 01 04 00                      LDSLOT 4
       62: 01 03 00                      LDSLOT 3
       65: 17                            CMPN_LT
       66: 1C 01 00                      COND_BRANCH 70
       69: 1F                            RETURN
       70: 01 04 00                      LDSLOT 4
       73: 01 03 00                      LDSLOT 3
       76: 04 01                         LDIMM_1_FIXNUM 1
       78: 21                            ADD
       79: 01 02 00                      LDSLOT 2
       82: 01 01 00                      LDSLOT 1
       85: 01 00 00                      LDSLOT 0
       88: 20 4B 49 8A CD 8A 48 39 8C    GET_BOUND_LOCATION a-times-u-core
       97: 0E                            LOAD
       98: 1E 05 00                      TAILCALL 5
      101: 1F                            RETURN
a-times-u:
        0: 04 00                         LDIMM_1_FIXNUM 0
        2: 01 02 00                      LDSLOT 2
        5: 01 01 00                      LDSLOT 1
        8: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       17: 0E                            LOAD
       18: 1D 02 00                      CALL 2
       21: 12                            SET
       22: 01 03 00                      LDSLOT 3
       25: 04 00                         LDIMM_1_FIXNUM 0
       27: 01 02 00                      LDSLOT 2
       30: 01 01 00                      LDSLOT 1
       33: 01 00 00                      LDSLOT 0
       36: 20 4B 49 8A CD 8A 48 39 8C    GET_BOUND_LOCATION a-times-u-core
       45: 0E                            LOAD
       46: 1D 05 00                      CALL 5
       49: 01 03 00                      LDSLOT 3
       52: 01 02 00                      LDSLOT 2
       55: 17                            CMPN_LT
       56: 1C 01 00                      COND_BRANCH 60
       59: 1F                            RETURN
       60: 01 03 00                      LDSLOT 3
       63: 01 02 00                      LDSLOT 2
       66: 04 01                         LDIMM_1_FIXNUM 1
       68: 21                            ADD
       69: 01 01 00                      LDSLOT 1
       72: 01 00 00                      LDSLOT 0
       75: 20 2D 81 55 1A 07 34 33 53    GET_BOUND_LOCATION a-times-u
       84: 0E                        LOAD
       85: 1E 04 00                      TAILCALL 4
       88: 1F                            RETURN
at-times-u-core:
        0: 01 03 00                      LDSLOT 3
        3: 01 01 00                      LDSLOT 1
        6: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       15: 0E                            LOAD
       16: 1D 02 00                      CALL 2
       19: 01 02 00                      LDSLOT 2
       22: 01 03 00                      LDSLOT 3
       25: 20 BE B7 01 86 4C BD 63 AF    GET_BOUND_LOCATION a
       34: 0E                            LOAD
       35: 1D 02 00                      CALL 2
       38: 21                            ADD
       39: 01 02 00                      LDSLOT 2
       42: 01 01 00                      LDSLOT 1
       45: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       54: 0E                            LOAD
       55: 1D 02 00                      CALL 2
       58: 12                            SET
       59: 01 04 00                      LDSLOT 4
       62: 01 03 00                      LDSLOT 3
       65: 17                            CMPN_LT
       66: 1C 01 00                      COND_BRANCH 70
       69: 1F                            RETURN
       70: 01 04 00                      LDSLOT 4
       73: 01 03 00                      LDSLOT 3
       76: 04 01                         LDIMM_1_FIXNUM 1
       78: 21                            ADD
       79: 01 02 00                      LDSLOT 2
       82: 01 01 00                      LDSLOT 1
       85: 01 00 00                      LDSLOT 0
       88: 20 4B 49 8A CD 8A 48 39 8C    GET_BOUND_LOCATION a-times-u-core
       97: 0E                            LOAD
       98: 1E 05 00                      TAILCALL 5
      101: 1F                            RETURN
at-times-u:
        0: 04 00                         LDIMM_1_FIXNUM 0
        2: 01 02 00                      LDSLOT 2
        5: 01 01 00                      LDSLOT 1
        8: 20 D4 04 19 F2 7B 2F 79 9E    GET_BOUND_LOCATION vector-ref
       17: 0E                            LOAD
       18: 1D 02 00                      CALL 2
       21: 12                            SET
       22: 01 03 00                      LDSLOT 3
       25: 04 00                         LDIMM_1_FIXNUM 0
       27: 01 02 00                      LDSLOT 2
       30: 01 01 00                      LDSLOT 1
       33: 01 00 00                      LDSLOT 0
       36: 20 4B 49 8A CD 8A 48 39 8C    GET_BOUND_LOCATION a-times-u-core
       45: 0E                            LOAD
       46: 1D 05 00                      CALL 5
       49: 01 03 00                      LDSLOT 3
       52: 01 02 00                      LDSLOT 2
       55: 17                            CMPN_LT
       56: 1C 01 00                      COND_BRANCH 60
       59: 1F                            RETURN
       60: 01 03 00                      LDSLOT 3
       63: 01 02 00                      LDSLOT 2
       66: 04 01                         LDIMM_1_FIXNUM 1
       68: 21                            ADD
       69: 01 01 00                      LDSLOT 1
       72: 01 00 00                      LDSLOT 0
       75: 20 7D 3A 12 AD 4C F1 71 78    GET_BOUND_LOCATION at-times-u
       84: 0E                            LOAD
       85: 1E 04 00                      TAILCALL 4
       88: 1F                            RETURN
ata-times-u:
        0: 01 02 00                      LDSLOT 2
        3: 04 01                         LDIMM_1_FIXNUM 1
        5: 21                            ADD
        6: 20 F5 FC DF BB BE E7 21 95    GET_BOUND_LOCATION make-vector
       15: 0E                            LOAD
       16: 1D 01 00                      CALL 1
       19: 11 FC FF                      STSLOT -4
       22: 01 02 00                      LDSLOT 2
       25: 04 00                         LDIMM_1_FIXNUM 0
       27: 01 FC FF                      LDSLOT -4
       30: 01 00 00                      LDSLOT 0
       33: 20 2D 81 55 1A 07 34 33 53    GET_BOUND_LOCATION a-times-u
       42: 0E                        LOAD
       43: 1E 04 00                      TAILCALL 4
       46: 1F                            RETURN
dot:
        0: 0D                            LDFN
        1: 04 06                         LDIMM_1_FIXNUM 6
        3: 10                            MAKE_REF
        4: 0E                            LOAD
        5: 20 B9 B7 01 86 4C BD 63 AF    GET_BOUND_LOCATION f
       14: 0F                            STORE
       15: 04 00                         LDIMM_1_FIXNUM 0
       17: 04 00                         LDIMM_1_FIXNUM 0
       19: 01 02 00                      LDSLOT 2
       22: 01 01 00                      LDSLOT 1
       25: 01 00 00                      LDSLOT 0
       28: 20 B9 B7 01 86 4C BD 63 AF    GET_BOUND_LOCATION f
       37: 0E                            LOAD
       38: 1E 05 00                      TAILCALL 5
       41: 1F                            RETURN
spectral-norm-test:
        0: 01 04 00                      LDSLOT 4
        3: 01 03 00                      LDSLOT 3
        6: 01 02 00                      LDSLOT 2
        9: 01 01 00                      LDSLOT 1
       12: 01 00 00                      LDSLOT 0
       15: 20 E7 27 6C 44 15 23 49 6D    GET_BOUND_LOCATION spectral-norm-test-core
       24: 0E                            LOAD
       25: 1D 05 00                      CALL 5
       28: 01 02 00                      LDSLOT 2
       31: 01 01 00                      LDSLOT 1
       34: 01 00 00                      LDSLOT 0
       37: 20 DE 1D A7 6B 18 A7 D2 D8    GET_BOUND_LOCATION dot
       46: 0E                            LOAD
       47: 1D 03 00                      CALL 3
       50: 01 02 00                      LDSLOT 2
       53: 01 01 00                      LDSLOT 1
       56: 01 01 00                      LDSLOT 1
       59: 20 DE 1D A7 6B 18 A7 D2 D8    GET_BOUND_LOCATION dot
       68: 0E                            LOAD
       69: 1D 03 00                      CALL 3
       72: 24                            DIV
       73: 1F                            RETURN
spectral-norm:
        0: 07 00 00 80 3F                LDIMM_4_FLONUM 1.000000
        5: 01 00 00                      LDSLOT 0
        8: 04 01                         LDIMM_1_FIXNUM 1
       10: 21                            ADD
       11: 20 F5 FC DF BB BE E7 21 95    GET_BOUND_LOCATION make-vector
       20: 0E                            LOAD
       21: 1D 02 00                      CALL 2
       24: 11 FC FF                      STSLOT -4
       27: 07 00 00 00 00                LDIMM_4_FLONUM 0.000000
       32: 01 00 00                      LDSLOT 0
       35: 04 01                         LDIMM_1_FIXNUM 1
       37: 21                            ADD
       38: 20 F5 FC DF BB BE E7 21 95    GET_BOUND_LOCATION make-vector
       47: 0E                            LOAD
       48: 1D 02 00                      CALL 2
       51: 11 FB FF                      STSLOT -5
       54: 04 0A                         LDIMM_1_FIXNUM 10
       56: 04 00                         LDIMM_1_FIXNUM 0
       58: 01 00 00                      LDSLOT 0
       61: 04 01                         LDIMM_1_FIXNUM 1
       63: 22                            SUB
       64: 01 FB FF                      LDSLOT -5
       67: 01 FC FF                      LDSLOT -4
       70: 20 49 35 5A 02 01 2D C9 32    GET_BOUND_LOCATION spectral-norm-test
       79: 0E                            LOAD
       80: 1E 05 00                      TAILCALL 5
       83: 1F                            RETURN
1.#INF00
